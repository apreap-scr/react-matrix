{"version":3,"sources":["components/Matrix.module.css","components/Row/Cell/Cell.module.css","components/Row/SumCell/SumCell.module.css","components/Row/DeleteRowCell/DeleteRowCell.module.css","components/Row/Row.module.css","components/RowAver/Cell/Cell.module.css","components/RowAver/RowAver.module.css","logo.svg","components/Row/Cell/Cell.jsx","components/Row/SumCell/SumCell.jsx","components/Row/DeleteRowCell/DeleteRowCell.jsx","components/Row/Row.jsx","components/RowAver/Cell/Cell.jsx","components/RowAver/RowAver.jsx","components/Matrix.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cell","props","createTable","id","cellVal","nameId","idRow","idCol","ref","cellRef","onClick","cellClick","onMouseOver","mouseOverCell","val","onMouseOut","mouseOutCell","render","className","classes","block","React","Component","SumCell","mouseOverCellSum","mouseOutCellSum","this","DeleteRowCell","deleteRow","Row","table","row","cellArr","map","j","index","key","push","sum","MatrixMain","dataCol","dataRow","dataXNearVal","idRowUnique","matrix","rowArr","colAverArr","arrAllValues","i","reduce","current","colName","countIter","Math","round","length","colAver","calcAver","createNewRow","getIdRowUnique","dynamicAll","splice","calcSumAll","calcAverAll","pushArrAllValues","_amountCell","floor","random","_row","_cell","_cellId","rowValue","idxIdCol","cellId","cell","MatrixComponent","addNewRow","createMatrixAddNewRow","state","matrixReady","setState","e","averSum","node","document","getElementById","aver","style","background","arr","num","m","diff","item","abs","sort","a","b","filteredArr","slice","backgroundColor","createRef","createMatrixAtTheBegin","wrapper","Button","variant","color","App","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec9da737.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Matrix_wrapper__ryinV\",\"addNewRow\":\"Matrix_addNewRow__36lEX\",\"block-matrix\":\"Matrix_block-matrix__1LicT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Cell_block__2ejky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"SumCell_block__3Tzz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"DeleteRowCell_block__2sPqg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Row_block__2mTAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Cell_block__3blhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"RowAver_block__tiGeW\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nimport classes from './Cell.module.css'\r\n\r\n\r\nexport default class Cell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    createTable = () => {\r\n        const id = this.props.cellVal.id\r\n        const nameId = `cell-${id.idRow}-${id.idCol}`\r\n        return <div\r\n            ref={this.props.cellRef}\r\n            id={nameId}\r\n            onClick={() => this.props.cellClick(this.props.cellVal)}\r\n\r\n            onMouseOver={() => this.props.mouseOverCell(nameId, this.props.cellVal.val)}\r\n            onMouseOut={() => this.props.mouseOutCell(nameId, this.props.cellVal.val)}\r\n        >\r\n            {this.props.cellVal.val}\r\n        </div>\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={`${classes.block}`}>\r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './SumCell.module.css'\r\n\r\n\r\nexport default class SumCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createTable = () => {\r\n        return <div\r\n            onMouseOver={() => this.props.mouseOverCellSum()}\r\n            onMouseOut={() => this.props.mouseOutCellSum()}\r\n        >{this.props.val}\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classes.block}`}>\r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './DeleteRowCell.module.css'\r\n\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\n\r\nexport default class DeleteRowCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classes.block}`}\r\n                onClick={() => this.props.deleteRow(this.props)}>\r\n                <BackspaceIcon />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport Cell from './Cell/Cell';\r\nimport SumCell from './SumCell/SumCell';\r\nimport DeleteRowCell from './DeleteRowCell/DeleteRowCell';\r\nimport classes from './Row.module.css'\r\n\r\n\r\nexport default class Row extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createTable = () => {\r\n        // let table = []\r\n\r\n        // for (let j of this.props.row.cellArr) {\r\n        //     table.push(< Cell\r\n        //         cellClick={this.props.cellClick}\r\n        //         cellRef={this.props.cellRef}\r\n        //         cellVal={j} />)\r\n        // }\r\n\r\n\r\n        let table = this.props.row.cellArr.map((j, index) =>\r\n            < Cell\r\n\r\n                mouseOverCell={this.props.mouseOverCell}\r\n                mouseOutCell={this.props.mouseOutCell}\r\n\r\n                key={index}\r\n                cellClick={this.props.cellClick}\r\n                cellRef={this.props.cellRef}\r\n                cellVal={j}\r\n            />\r\n        );\r\n\r\n        table.push(< SumCell\r\n            mouseOverCellSum={() => this.props.mouseOverCellSum(this.props.row.id)}\r\n            mouseOutCellSum={() => this.props.mouseOutCellSum(this.props.row.id)}\r\n            val={this.props.row.sum} />)\r\n        table.push(< DeleteRowCell\r\n            deleteRow={() => this.props.deleteRow(this.props.row.id)} />)\r\n        return table\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classes.block}`}>\r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './Cell.module.css'\r\n\r\n\r\nclass Cell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createTable = () => {\r\n        // console.log(\"cellVal: \", this.props)\r\n        return <div>{this.props.cellVal}</div>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classes.block}`}>\r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport Cell from './Cell/Cell';\r\nimport classes from './RowAver.module.css'\r\n\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    createTable = () => {\r\n        let table = []\r\n        for (let j of this.props.row) {\r\n\r\n            table.push(< Cell cellVal={j.val} />)\r\n        }\r\n        return table\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classes.block}`}>\r\n                {this.createTable()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport classes from './Matrix.module.css'\r\nimport Row from './Row/Row';\r\nimport RowAver from './RowAver/RowAver';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nclass MatrixData {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    _amountCell = () => Math.floor(Math.random() * 1000)\r\n\r\n    _row = (id, cellArr, sum = false) => {\r\n        return { id, cellArr, sum }\r\n    }\r\n\r\n    colAver = (id, val) => {\r\n        return { id, val }\r\n    }\r\n\r\n    _cell = (id, val) => {\r\n        return { id, val }\r\n    }\r\n\r\n    _cellId = (idRow, idCol) => {\r\n        return { idRow, idCol }\r\n    }\r\n\r\n    createNewRow = (idRow) => {\r\n        let rowValue = []\r\n        for (let idxIdCol = 0; idxIdCol < this.dataCol; idxIdCol++) {\r\n            const cellId = this._cellId(idRow, idxIdCol)\r\n            const cell = this._cell(cellId, this._amountCell())\r\n            rowValue.push(cell)\r\n        }\r\n        return this._row(idRow, rowValue)\r\n    }\r\n}\r\n\r\n\r\nclass MatrixMain extends MatrixData {\r\n\r\n    constructor(dataCol, dataRow, dataXNearVal) {\r\n        super();\r\n        this.idRowUnique = 0;\r\n        this.dataRow = dataRow;\r\n        this.dataCol = dataCol;\r\n        this.matrix = {\r\n            rowArr: [],\r\n            colAverArr: null,\r\n            arrAllValues: null,\r\n            dataXNearVal\r\n        }\r\n    }\r\n\r\n    getIdRowUnique() {\r\n        return this.idRowUnique++;\r\n    }\r\n\r\n    calcSumAll() {\r\n        for (let i of this.matrix.rowArr) {\r\n            i.sum = i.cellArr.reduce((sum, current) => sum + current.val, 0)\r\n        }\r\n    }\r\n\r\n    calcAver(colName) {\r\n        let sum = 0\r\n        let countIter = 0\r\n        for (let i of this.matrix.rowArr) {\r\n            sum += i.cellArr[colName].val\r\n            countIter++\r\n        }\r\n        return Math.round(sum / countIter)\r\n    }\r\n\r\n    calcAverAll() {\r\n        this.matrix.colAverArr = []\r\n        if (this.matrix.rowArr[0].cellArr.length < 1) {\r\n            return false\r\n        }\r\n        for (let i of this.matrix.rowArr[0].cellArr) {\r\n            this.matrix.colAverArr.push(this.colAver(i.id.idCol, this.calcAver(i.id.idCol)))\r\n        }\r\n    }\r\n\r\n    createMatrixAtTheBegin() {\r\n        for (let i = 0; i < this.dataRow; i++) {\r\n            this.matrix.rowArr.push(this.createNewRow(this.getIdRowUnique()))\r\n        }\r\n        this.dynamicAll()\r\n    }\r\n\r\n    pushArrAllValues() {\r\n        this.matrix.arrAllValues = []\r\n        for (let i of this.matrix.rowArr) {\r\n            for (let j of i.cellArr) {\r\n                this.matrix.arrAllValues.push(j.val)\r\n            }\r\n        }\r\n    }\r\n\r\n    // -------------- dynamic ---------------//\r\n    createMatrixAddNewRow() {\r\n        this.matrix.rowArr.push(this.createNewRow(this.getIdRowUnique()))\r\n        this.dynamicAll()\r\n    }\r\n\r\n    deleteRow(id) {\r\n        if (this.matrix.rowArr.length <= 1) {\r\n            return false\r\n        }\r\n        for (let i in this.matrix.rowArr) {\r\n            if (this.matrix.rowArr[i].id == id) {\r\n                this.matrix.rowArr.splice(i, 1);\r\n                break\r\n            }\r\n        }\r\n        this.dynamicAll()\r\n    }\r\n\r\n    dynamicAll() {\r\n        this.calcSumAll()\r\n        this.calcAverAll()\r\n        this.pushArrAllValues()\r\n    }\r\n\r\n    // ----------------------------------------//\r\n\r\n    get matrixReady() {\r\n        return this.matrix\r\n    }\r\n}\r\n\r\n\r\nexport default class MatrixComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cellRef = React.createRef();\r\n        // ****************** matrix ********************* //\r\n        this.matrix = new MatrixMain(20, 15, 8);\r\n        this.matrix.createMatrixAtTheBegin()\r\n        this.state = { matrixReady: this.matrix.matrixReady }\r\n        // ********************************************** //\r\n    }\r\n    // ----------------------- Row ------------------------//\r\n    addNewRow = () => {\r\n        this.matrix.createMatrixAddNewRow()\r\n        this.state = { matrixReady: this.matrix.matrixReady }\r\n        this.setState({});\r\n    }\r\n\r\n    deleteRow = (e) => {\r\n        this.matrix.deleteRow(e)\r\n        this.state = { matrixReady: this.matrix.matrixReady }\r\n        this.setState({});\r\n    }\r\n    // ----------------------- Cell Sum ------------------------//\r\n    mouseOverCellSum = (e) => {\r\n        for (let i in this.state.matrixReady.rowArr) {\r\n            if (this.state.matrixReady.rowArr[i].id == e) {\r\n                const sum = this.state.matrixReady.rowArr[i].sum\r\n                const len = this.state.matrixReady.rowArr[i].cellArr.length\r\n                const averSum = sum / len;\r\n                for (let j of this.state.matrixReady.rowArr[i].cellArr) {\r\n                    const id = `cell-${j.id.idRow}-${j.id.idCol}`\r\n                    const node = document.getElementById(id);\r\n                    const aver = (j.val * 100) / averSum;\r\n                    node.style.background = 'linear-gradient(to top, #3437eb ' + aver + '%, #eb4034 ' + aver + '%)';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    mouseOutCellSum = (e) => {\r\n        for (let i in this.state.matrixReady.rowArr) {\r\n            if (this.state.matrixReady.rowArr[i].id == e) {\r\n                for (let j of this.state.matrixReady.rowArr[i].cellArr) {\r\n                    const id = `cell-${j.id.idRow}-${j.id.idCol}`\r\n                    const node = document.getElementById(id);\r\n                    node.style.background = \"#000\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // ----------------------- cell ------------------------//\r\n    mouseOverCell = (id, val) => {\r\n        //-------------- AverageSort -----------------\r\n        let arr = this.state.matrixReady.arrAllValues\r\n        // let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n        let num = val // num in arr, position\r\n        let m = this.state.matrixReady.dataXNearVal; // number of final machines to find\r\n\r\n        // Create an array of objects storing the original arr + diff from `num`\r\n        const diff = arr.map(item => {\r\n            return { id: item, diff: Math.abs(+item - +num) };\r\n        });\r\n\r\n        // Sort by difference from `num` (lowest to highest)\r\n        diff.sort((a, b) => a.diff - b.diff);\r\n\r\n        // Get the first m entries\r\n        const filteredArr = diff.slice(0, m).map(item => item.id).sort();\r\n\r\n        // Log\r\n        // console.log(filteredArr);\r\n        //------------------------------------------------\r\n        for (let i of this.state.matrixReady.rowArr) {\r\n            for (let j of i.cellArr) {\r\n                for (let x of filteredArr) {\r\n                    if (x == j.val) {\r\n                        let cell = document.getElementById(`cell-${j.id.idRow}-${j.id.idCol}`);\r\n                        cell.style.backgroundColor = \"red\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseOutCell = (e) => {\r\n        for (let i of this.state.matrixReady.rowArr) {\r\n            for (let j of i.cellArr) {\r\n                let cell = document.getElementById(`cell-${j.id.idRow}-${j.id.idCol}`);\r\n                cell.style.backgroundColor = \"#000000\";\r\n            }\r\n        }\r\n    }\r\n\r\n    cellClick = (e) => {\r\n        for (let i in this.state.matrixReady.rowArr) {\r\n            if (this.state.matrixReady.rowArr[i].id == e.id.idRow) {\r\n                this.state.matrixReady.rowArr[i].cellArr[e.id.idCol].val++\r\n                this.matrix.dynamicAll()\r\n                this.setState({});\r\n                break\r\n            }\r\n        }\r\n    }\r\n    // ---------------------------------------------------- //\r\n\r\n    createTable = () => {\r\n        let table = []\r\n        for (let i of this.state.matrixReady.rowArr) {\r\n            table.push(< Row\r\n                cellRef={this.cellRef}\r\n                cellClick={this.cellClick}\r\n                mouseOverCellSum={this.mouseOverCellSum}\r\n                mouseOutCellSum={this.mouseOutCellSum}\r\n                mouseOverCell={this.mouseOverCell}\r\n                mouseOutCell={this.mouseOutCell}\r\n                deleteRow={this.deleteRow}\r\n                row={i} />)\r\n        }\r\n        table.push(< RowAver row={this.state.matrixReady.colAverArr} />)\r\n        return table\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`${classes.wrapper}`}>\r\n\r\n                <Button\r\n                    onClick={() => this.addNewRow()}\r\n                    variant=\"contained\" color=\"primary\"\r\n                    className={classes.addNewRow}>\r\n                    Add New Row\r\n                </Button>\r\n\r\n                <div className={`${classes['block-matrix']}`}>\r\n                    {this.createTable()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Matrix from './components/Matrix';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>React Matrix</h1>\n      <Matrix />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}